---
name: Build Release Artifacts

on:
  push:
    tags:
      - "*"

permissions: read-all

jobs:
  sanity-check:
    runs-on: ubuntu-24.04
    outputs:
      TAG_NAME: ${{ steps.identify-tag.outputs.TAG_NAME }}
    steps:
      - name: Report to Slack
        uses: act10ns/slack@v2
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          status: ${{ job.status }}
          channel: "#protocol-internal"
          message: "Release pipeline started! cc <@U028EMRHS3S>"

      - uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - name: Figure out tag name
        id: identify-tag
        shell: bash
        run: |
          TAG_NAME=$(git describe --tag)
          echo "TAG_NAME=$TAG_NAME" >> "$GITHUB_ENV"
          echo "TAG_NAME=$TAG_NAME" >> "$GITHUB_OUTPUT"

      - name: Sanity check tag name suffix
        run: |
          echo "${{ env.TAG_NAME }}" | grep -E "mainnet|testnet|devnet"
          .github/check-tag-suffix-vs-origin-branch.sh

      - name: Check tag name vs. Cargo.toml version
        run: |
          ./.github/check-version-vs-git-tag.sh

  setup:
    runs-on: ubuntu-24.04
    needs: sanity-check
    outputs:
      build_options: ${{ steps.set-build-options.outputs.build_options}}
    steps:
      - name: Set build options
        id: set-build-options
        shell: bash
        run: |
          echo "build_options=${{ contains( needs.sanity-check.outputs.TAG_NAME, 'devnet') && '--features devnet --features fast-runtime' || '' }}" >> "$GITHUB_OUTPUT"

      - name: View the build options
        shell: bash
        run: |
          echo "build_options = ${{ steps.set-build-options.outputs.build_options}}"

  build-native-runtime:
    needs:
      - sanity-check
      - setup
    uses: ./.github/workflows/build-native.yml
    with:
      build-options: "--release --features metadata-hash ${{ needs.setup.outputs.build_options}}"
      version-string: "${{ needs.sanity-check.outputs.TAG_NAME }}-x86_64-unknown-linux-gnu"
    secrets: inherit

  build-wasm-runtime:
    needs:
      - sanity-check
      - setup
    uses: ./.github/workflows/build-wasm.yml
    with:
      build-options: "--features metadata-hash ${{ needs.setup.outputs.build_options }}"
      version-string: ${{ needs.sanity-check.outputs.TAG_NAME }}

  docker-build:
    needs:
      - sanity-check
      - setup
    uses: ./.github/workflows/build-docker.yml
    with:
      build-options: "BUILD_ARGS=${{ needs.setup.outputs.build_options }} --features metadata-hash"
      version-string: ${{ needs.sanity-check.outputs.TAG_NAME }}
    secrets: inherit

  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-24.04
    needs:
      - sanity-check
      - build-native-runtime
      - build-wasm-runtime
      - docker-build
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          path: artifact
          pattern: binary-for-*
          merge-multiple: true

      - name: Compress creditcoin-node binary
        shell: bash
        working-directory: artifact/
        run: |
          # -m removes the uncompressed file b/c we don't want to be uploading it
          zip -m "creditcoin-${{ needs.sanity-check.outputs.TAG_NAME }}-$(uname -m)-unknown-linux-gnu.zip" creditcoin3-node

          ls -lR

      - name: Make the release
        uses: softprops/action-gh-release@v2
        with:
          files: "artifact/creditcoin-${{ needs.sanity-check.outputs.TAG_NAME }}*"
          fail_on_unmatched_files: true
          name: ${{ needs.sanity-check.outputs.TAG_NAME  }}

      - name: Report result to Slack
        if: always()
        uses: act10ns/slack@v2
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          status: ${{ job.status }}
          channel: "#protocol-internal"
          message: "Release pipeline finished! cc <@U028EMRHS3S>"
